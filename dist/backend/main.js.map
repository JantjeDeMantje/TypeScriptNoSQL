{"version":3,"file":"main.js","mappings":"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","sources":["external commonjs \"tslib\"","external commonjs \"@nestjs/common\"","external commonjs \"mongoose\"","external commonjs \"dotenv\"","external commonjs \"@nestjs/core\"","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\app\\app.module.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\app\\app.controller.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\app\\app.service.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\modules.module.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\application\\module.service.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\domain\\module.repository.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\domain\\module.entity.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\tokens.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\interface\\module.controller.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\interface\\module.dto.ts","external commonjs \"class-validator\"","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\infrastructure\\module.mongo.repository.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\modules\\infrastructure\\module.schema.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\auth.module.ts","external commonjs \"@nestjs/jwt\"","external commonjs \"@nestjs/passport\"","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\interface\\auth.controller.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\application\\auth.service.ts","external commonjs \"bcrypt\"","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\domain\\user.repository.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\domain\\user.entity.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\tokens.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\interface\\auth.dto.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\interface\\favorite.controller.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\application\\jwt-auth.guard.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\application\\favorite.service.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\domain\\favorite.repository.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\domain\\favorite.entity.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\application\\jwt.strategy.ts","external commonjs \"passport-jwt\"","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\infrastructure\\user.mongo.repository.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\infrastructure\\user.schema.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\infrastructure\\favorite.mongo.repository.ts","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\auth\\infrastructure\\favorite.schema.ts","webpack/bootstrap","C:\\Users\\Admin\\Documents\\Programmeren\\TypeScriptNoSQL\\TypeScriptNoSQL\\backend\\src\\main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"mongoose\");","module.exports = require(\"dotenv\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { ModulesModule } from '../modules/modules.module';\r\nimport { AuthModule } from '../auth/auth.module';\r\n\r\n@Module({\r\n  imports: [ModulesModule, AuthModule],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","import { Controller, Get } from '@nestjs/common';\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Hello API' };\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { ModuleService } from './application/module.service';\r\nimport { ModuleController } from './interface/module.controller';\r\nimport { ModuleMongoRepository } from './infrastructure/module.mongo.repository';\r\nimport { MODULE_REPO } from './tokens';\r\n\r\n@Module({\r\n  providers: [\r\n    ModuleService,\r\n    ModuleMongoRepository,\r\n    { provide: MODULE_REPO, useExisting: ModuleMongoRepository },\r\n  ],\r\n  controllers: [ModuleController],\r\n  exports: [ModuleService],\r\n})\r\nexport class ModulesModule {}","import { Injectable, NotFoundException, Inject } from '@nestjs/common';\r\nimport { ModuleRepository, ModuleFilter } from '../domain/module.repository';\r\nimport { Module, ModuleProps } from '../domain/module.entity';\r\nimport { MODULE_REPO } from '../tokens';\r\n\r\n@Injectable()\r\nexport class ModuleService {\r\n  constructor(\r\n    @Inject(MODULE_REPO)\r\n    private readonly repo: ModuleRepository\r\n  ) {}\r\n\r\n  list(filter: ModuleFilter) {\r\n    return this.repo.findAll(filter);\r\n  }\r\n\r\n  get(code: string) {\r\n    return this.repo.findByCode(code);\r\n  }\r\n\r\n  create(dto: ModuleProps) {\r\n    return this.repo.create(Module.create(dto));\r\n  }\r\n\r\n  update(code: string, patch: Partial<ModuleProps>) {\r\n    return this.repo.update(code, patch);\r\n  }\r\n\r\n  async ensure(code: string) {\r\n    const m = await this.get(code);\r\n    if (!m) throw new NotFoundException('Module not found');\r\n    return m;\r\n  }\r\n\r\n  async delete(code: string) {\r\n    const deleted = await this.repo.delete(code);\r\n    if (!deleted) throw new NotFoundException('Module not found');\r\n    return deleted;\r\n  }\r\n}","import { Module } from './module.entity';\r\n\r\nexport interface ModuleFilter {\r\n  ec?: number;\r\n  level?: string;\r\n  theme?: string;\r\n  q?: string;\r\n}\r\n\r\nexport interface ModuleRepository {\r\n  findAll(filter?: ModuleFilter): Promise<Module[]>;\r\n  findByCode(code: string): Promise<Module | null>;\r\n  create(module: Module): Promise<Module>;\r\n  update(code: string, patch: Partial<ReturnType<Module['toJSON']>>): Promise<Module | null>;\r\n  delete(code: string): Promise<boolean>;\r\n}","export type Localized = {\r\n  en?: string;\r\n  nl?: string;\r\n} | string | undefined;\r\n\r\nexport interface ModuleProps {\r\n  code: string;\r\n  name: string;\r\n  ec: number;\r\n  level: 'NLQF-5' | 'NLQF-6';\r\n  theme?: string;\r\n  description?: Localized;\r\n  keywords?: string[];\r\n}\r\n\r\nexport class Module {\r\n  private constructor(private readonly props: ModuleProps) {}\r\n  static create(props: ModuleProps) {\r\n    return new Module(props);\r\n  }\r\n  toJSON(): ModuleProps {\r\n    return { ...this.props };\r\n  }\r\n}","export const MODULE_REPO = 'ModuleRepository' as const;\r\n","import { Controller, Get, Param, Post, Body, Put, Query } from '@nestjs/common';\r\nimport { Delete } from '@nestjs/common';\r\nimport { ModuleService } from '../application/module.service';\r\nimport { CreateModuleDto, UpdateModuleDto } from './module.dto';\r\nimport { ModuleFilter } from '../domain/module.repository';\r\n\r\n@Controller('modules')\r\nexport class ModuleController {\r\n  constructor(private readonly service: ModuleService) {}\r\n\r\n  // Helper normalization (legacy string description -> object)\r\n  private normalizeOut(m: any): any {\r\n    const out = { ...m };\r\n    if (typeof out.description === 'string') {\r\n      out.description = { en: out.description, nl: out.description };\r\n    }\r\n    return out;\r\n  }\r\n\r\n  @Get()\r\n  async list(@Query() q: ModuleFilter) {\r\n    const filters: ModuleFilter = {\r\n      ...q,\r\n      ec: (q as any)?.ec !== undefined && (q as any).ec !== '' ? Number((q as any).ec) : undefined,\r\n    };\r\n    const modules = await this.service.list(filters);\r\n    return modules.map((m) => this.normalizeOut(m.toJSON()));\r\n  }\r\n\r\n  @Get(':code')\r\n  async get(@Param('code') code: string) {\r\n    const m = await this.service.get(code);\r\n    return m ? this.normalizeOut(m.toJSON()) : null;\r\n  }\r\n\r\n  @Post()\r\n  async create(@Body() dto: CreateModuleDto) {\r\n    return this.normalizeOut((await this.service.create(dto)).toJSON());\r\n  }\r\n\r\n  @Put(':code')\r\n  async update(@Param('code') code: string, @Body() dto: UpdateModuleDto) {\r\n    const m = await this.service.update(code, dto);\r\n    return m ? this.normalizeOut(m.toJSON()) : null;\r\n  }\r\n\r\n  @Delete(':code')\r\n  async delete(@Param('code') code: string) {\r\n    await this.service.delete(code);\r\n    return { success: true };\r\n  }\r\n}","import { IsString, IsNumber, IsIn, IsOptional, IsArray, IsObject } from 'class-validator';\r\n\r\nexport class CreateModuleDto {\r\n  @IsString() code!: string;\r\n  @IsString() name!: string;\r\n  @IsNumber() ec!: number;\r\n  @IsIn(['NLQF-5', 'NLQF-6']) level!: 'NLQF-5' | 'NLQF-6';\r\n  @IsOptional() @IsString() theme?: string;\r\n  // Accept either string or object { en?: string; nl?: string }\r\n  @IsOptional() description?: any;\r\n  @IsOptional() @IsArray() keywords?: string[];\r\n}\r\n\r\nexport class UpdateModuleDto {\r\n  @IsOptional() @IsString() name?: string;\r\n  @IsOptional() @IsNumber() ec?: number;\r\n  @IsOptional() @IsIn(['NLQF-5', 'NLQF-6']) level?: 'NLQF-5' | 'NLQF-6';\r\n  @IsOptional() @IsString() theme?: string;\r\n  // Accept either string or object { en?: string; nl?: string }\r\n  @IsOptional() description?: any;\r\n  @IsOptional() @IsArray() keywords?: string[];\r\n}","module.exports = require(\"class-validator\");","import { ModuleRepository, ModuleFilter } from '../domain/module.repository';\r\nimport { Module } from '../domain/module.entity';\r\nimport { ModuleModel } from './module.schema';\r\n\r\nexport class ModuleMongoRepository implements ModuleRepository {\r\n  async findAll(filter: ModuleFilter = {}): Promise<Module[]> {\r\n    const query: Record<string, any> = {};\r\n    if (filter.ec !== undefined) query.ec = filter.ec;\r\n    if (filter.level) query.level = filter.level;\r\n    if (filter.theme) query.theme = filter.theme;\r\n    if (filter.q) {\r\n      const r = new RegExp(filter.q, 'i');\r\n      // When description is object, search both en/nl fields\r\n      query.$or = [\r\n        { name: r },\r\n        { description: r },\r\n        { 'description.en': r },\r\n        { 'description.nl': r },\r\n        { keywords: r },\r\n        { code: r },\r\n      ];\r\n    }\r\n    const docs = await ModuleModel.find(query).lean();\r\n    return docs.map((d) => Module.create(this.normalizeDoc(d)));\r\n  }\r\n  async findByCode(code: string) {\r\n    const doc = await ModuleModel.findOne({ code }).lean();\r\n    return doc ? Module.create(this.normalizeDoc(doc)) : null;\r\n  }\r\n  async create(module: Module) {\r\n    const data = this.normalizeDoc(module.toJSON());\r\n    await ModuleModel.create(data);\r\n    return module;\r\n  }\r\n  async update(code: string, patch: any) {\r\n    const normalized = this.normalizeDoc(patch);\r\n    const doc = await ModuleModel.findOneAndUpdate({ code }, normalized, { new: true }).lean();\r\n    return doc ? Module.create(this.normalizeDoc(doc)) : null;\r\n  }\r\n  async delete(code: string): Promise<boolean> {\r\n    const res = await ModuleModel.deleteOne({ code });\r\n    return res.deletedCount > 0;\r\n  }\r\n\r\n  private normalizeDoc(d: any) {\r\n    const out = { ...d };\r\n    // If description is a string, keep as-is (legacy). If object, ensure only en/nl keys and strings.\r\n    if (out && out.description !== undefined && out.description !== null) {\r\n      if (typeof out.description === 'object' && !Array.isArray(out.description)) {\r\n        const en = typeof out.description.en === 'string' ? out.description.en : undefined;\r\n        const nl = typeof out.description.nl === 'string' ? out.description.nl : undefined;\r\n        out.description = { ...(en ? { en } : {}), ...(nl ? { nl } : {}) };\r\n        // If both missing (bad input), drop description\r\n        if (Object.keys(out.description).length === 0) delete out.description;\r\n      }\r\n      // strings are fine; arrays or other types are dropped\r\n      if (Array.isArray(out.description)) delete out.description;\r\n    }\r\n    return out;\r\n  }\r\n}","import { Schema, model } from 'mongoose';\r\n\r\nconst ModuleSchema = new Schema(\r\n  {\r\n    code: { type: String, required: true, unique: true },\r\n    name: { type: String, required: true },\r\n    ec: { type: Number, required: true },\r\n    level: { type: String, required: true },\r\n    theme: String,\r\n    // Allow description to be either a string (legacy) or an object with language keys\r\n    description: Schema.Types.Mixed,\r\n    keywords: [String],\r\n  },\r\n  { timestamps: true}\r\n);\r\n\r\nexport const ModuleModel = model('Module', ModuleSchema);","import { Module } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { AuthController } from './interface/auth.controller';\r\nimport { FavoriteController } from './interface/favorite.controller';\r\nimport { AuthService } from './application/auth.service';\r\nimport { FavoriteService } from './application/favorite.service';\r\nimport { JwtStrategy } from './application/jwt.strategy';\r\nimport { UserMongoRepository } from './infrastructure/user.mongo.repository';\r\nimport { FavoriteMongoRepository } from './infrastructure/favorite.mongo.repository';\r\nimport { USER_REPO, FAVORITE_REPO } from './tokens';\r\n\r\n@Module({\r\n  imports: [\r\n    PassportModule,\r\n    JwtModule.register({\r\n      secret: process.env.JWT_SECRET || 'secret',\r\n      signOptions: { expiresIn: '7d' },\r\n    }),\r\n  ],\r\n  controllers: [AuthController, FavoriteController],\r\n  providers: [\r\n    AuthService,\r\n    FavoriteService,\r\n    JwtStrategy,\r\n    {\r\n      provide: USER_REPO,\r\n      useClass: UserMongoRepository,\r\n    },\r\n    {\r\n      provide: FAVORITE_REPO,\r\n      useClass: FavoriteMongoRepository,\r\n    },\r\n  ],\r\n  exports: [AuthService],\r\n})\r\nexport class AuthModule {}\r\n","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","import { Controller, Post, Body } from '@nestjs/common';\r\nimport { AuthService } from '../application/auth.service';\r\nimport { RegisterDto, LoginDto } from './auth.dto';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  @Post('register')\r\n  async register(@Body() dto: RegisterDto) {\r\n    return this.authService.register(\r\n      dto.email,\r\n      dto.password,\r\n      dto.firstName,\r\n      dto.lastName,\r\n    );\r\n  }\r\n\r\n  @Post('login')\r\n  async login(@Body() dto: LoginDto) {\r\n    return this.authService.login(dto.email, dto.password);\r\n  }\r\n}\r\n","import { Injectable, UnauthorizedException, ConflictException, Inject } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { UserRepository } from '../domain/user.repository';\r\nimport { User } from '../domain/user.entity';\r\nimport { USER_REPO } from '../tokens';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    @Inject(USER_REPO) private userRepo: UserRepository,\r\n    private jwtService: JwtService,\r\n  ) {}\r\n\r\n  async register(email: string, password: string, firstName: string, lastName: string) {\r\n    const existing = await this.userRepo.findByEmail(email);\r\n    if (existing) {\r\n      throw new ConflictException('User with this email already exists');\r\n    }\r\n\r\n    const passwordHash = await bcrypt.hash(password, 10);\r\n    const user = User.create({ email, passwordHash, firstName, lastName });\r\n    const created = await this.userRepo.create(user);\r\n\r\n    const token = this.jwtService.sign({ email: created.email });\r\n    return {\r\n      user: created.toJSON(),\r\n      token,\r\n    };\r\n  }\r\n\r\n  async login(email: string, password: string) {\r\n    const user = await this.userRepo.findByEmail(email);\r\n    if (!user) {\r\n      throw new UnauthorizedException('Invalid credentials');\r\n    }\r\n\r\n    const valid = await bcrypt.compare(password, user.passwordHash);\r\n    if (!valid) {\r\n      throw new UnauthorizedException('Invalid credentials');\r\n    }\r\n\r\n    const token = this.jwtService.sign({ email: user.email });\r\n    return {\r\n      user: user.toJSON(),\r\n      token,\r\n    };\r\n  }\r\n\r\n  async validateUser(email: string): Promise<User | null> {\r\n    return this.userRepo.findByEmail(email);\r\n  }\r\n}\r\n","module.exports = require(\"bcrypt\");","import { User } from './user.entity';\r\n\r\nexport interface UserRepository {\r\n  findByEmail(email: string): Promise<User | null>;\r\n  create(user: User): Promise<User>;\r\n}\r\n","export interface UserProps {\r\n  email: string;\r\n  passwordHash: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport class User {\r\n  constructor(private props: UserProps) {}\r\n\r\n  get email(): string {\r\n    return this.props.email;\r\n  }\r\n\r\n  get passwordHash(): string {\r\n    return this.props.passwordHash;\r\n  }\r\n\r\n  get firstName(): string {\r\n    return this.props.firstName;\r\n  }\r\n\r\n  get lastName(): string {\r\n    return this.props.lastName;\r\n  }\r\n\r\n  get createdAt(): Date | undefined {\r\n    return this.props.createdAt;\r\n  }\r\n\r\n  static create(props: UserProps): User {\r\n    return new User(props);\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      email: this.email,\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      createdAt: this.createdAt,\r\n    };\r\n  }\r\n}\r\n","export const USER_REPO = Symbol('USER_REPO');\r\nexport const FAVORITE_REPO = Symbol('FAVORITE_REPO');\r\n","import { IsEmail, IsString, MinLength, Matches } from 'class-validator';\r\n\r\nexport class RegisterDto {\r\n  @IsEmail()\r\n  @Matches(/@student\\.avans\\.nl$/, {\r\n    message: 'Email must be a valid Avans student email (a.lastname@student.avans.nl)',\r\n  })\r\n  email: string;\r\n\r\n  @IsString()\r\n  @MinLength(8, { message: 'Password must be at least 8 characters long' })\r\n  password: string;\r\n\r\n  @IsString()\r\n  firstName: string;\r\n\r\n  @IsString()\r\n  lastName: string;\r\n}\r\n\r\nexport class LoginDto {\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @IsString()\r\n  password: string;\r\n}\r\n","import { Controller, Get, Post, Delete, Param, UseGuards, Request } from '@nestjs/common';\r\nimport { JwtAuthGuard } from '../application/jwt-auth.guard';\r\nimport { FavoriteService } from '../application/favorite.service';\r\n\r\n@Controller('favorites')\r\n@UseGuards(JwtAuthGuard)\r\nexport class FavoriteController {\r\n  constructor(private favoriteService: FavoriteService) {}\r\n\r\n  @Get()\r\n  async getUserFavorites(@Request() req: any) {\r\n    const userEmail = req.user.email;\r\n    return this.favoriteService.getUserFavorites(userEmail);\r\n  }\r\n\r\n  @Post(':moduleCode')\r\n  async addFavorite(@Request() req: any, @Param('moduleCode') moduleCode: string) {\r\n    const userEmail = req.user.email;\r\n    await this.favoriteService.addFavorite(userEmail, moduleCode);\r\n    return { message: 'Module added to favorites' };\r\n  }\r\n\r\n  @Delete(':moduleCode')\r\n  async removeFavorite(@Request() req: any, @Param('moduleCode') moduleCode: string) {\r\n    const userEmail = req.user.email;\r\n    await this.favoriteService.removeFavorite(userEmail, moduleCode);\r\n    return { message: 'Module removed from favorites' };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\r\n","import { Injectable, Inject } from '@nestjs/common';\r\nimport { FavoriteRepository } from '../domain/favorite.repository';\r\nimport { Favorite } from '../domain/favorite.entity';\r\nimport { FAVORITE_REPO } from '../tokens';\r\n\r\n@Injectable()\r\nexport class FavoriteService {\r\n  constructor(@Inject(FAVORITE_REPO) private favoriteRepo: FavoriteRepository) {}\r\n\r\n  async getUserFavorites(userEmail: string): Promise<string[]> {\r\n    const favorites = await this.favoriteRepo.findByUser(userEmail);\r\n    return favorites.map((f) => f.moduleCode);\r\n  }\r\n\r\n  async addFavorite(userEmail: string, moduleCode: string): Promise<void> {\r\n    const existing = await this.favoriteRepo.findOne(userEmail, moduleCode);\r\n    if (existing) {\r\n      return; // Already favorited\r\n    }\r\n    const favorite = Favorite.create({ userEmail, moduleCode });\r\n    await this.favoriteRepo.create(favorite);\r\n  }\r\n\r\n  async removeFavorite(userEmail: string, moduleCode: string): Promise<void> {\r\n    await this.favoriteRepo.delete(userEmail, moduleCode);\r\n  }\r\n\r\n  async isFavorited(userEmail: string, moduleCode: string): Promise<boolean> {\r\n    const favorite = await this.favoriteRepo.findOne(userEmail, moduleCode);\r\n    return !!favorite;\r\n  }\r\n}\r\n","import { Favorite } from './favorite.entity';\r\n\r\nexport interface FavoriteRepository {\r\n  findByUser(userEmail: string): Promise<Favorite[]>;\r\n  findOne(userEmail: string, moduleCode: string): Promise<Favorite | null>;\r\n  create(favorite: Favorite): Promise<Favorite>;\r\n  delete(userEmail: string, moduleCode: string): Promise<void>;\r\n}\r\n","export interface FavoriteProps {\r\n  userEmail: string;\r\n  moduleCode: string;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport class Favorite {\r\n  constructor(private props: FavoriteProps) {}\r\n\r\n  get userEmail(): string {\r\n    return this.props.userEmail;\r\n  }\r\n\r\n  get moduleCode(): string {\r\n    return this.props.moduleCode;\r\n  }\r\n\r\n  get createdAt(): Date | undefined {\r\n    return this.props.createdAt;\r\n  }\r\n\r\n  static create(props: FavoriteProps): Favorite {\r\n    return new Favorite(props);\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      userEmail: this.userEmail,\r\n      moduleCode: this.moduleCode,\r\n      createdAt: this.createdAt,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { AuthService } from '../application/auth.service';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: process.env.JWT_SECRET || 'secret',\r\n    });\r\n  }\r\n\r\n  async validate(payload: { email: string }) {\r\n    const user = await this.authService.validateUser(payload.email);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return user.toJSON();\r\n  }\r\n}\r\n","module.exports = require(\"passport-jwt\");","import { Injectable } from '@nestjs/common';\r\nimport { UserRepository } from '../domain/user.repository';\r\nimport { User } from '../domain/user.entity';\r\nimport { UserModel } from './user.schema';\r\n\r\n@Injectable()\r\nexport class UserMongoRepository implements UserRepository {\r\n  async findByEmail(email: string): Promise<User | null> {\r\n    const doc = await UserModel.findOne({ email });\r\n    if (!doc) return null;\r\n    return User.create({\r\n      email: doc.email,\r\n      passwordHash: doc.passwordHash,\r\n      firstName: doc.firstName,\r\n      lastName: doc.lastName,\r\n      createdAt: doc.createdAt,\r\n    });\r\n  }\r\n\r\n  async create(user: User): Promise<User> {\r\n    const doc = new UserModel({\r\n      email: user.email,\r\n      passwordHash: user.passwordHash,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n    });\r\n    await doc.save();\r\n    return User.create({\r\n      email: doc.email,\r\n      passwordHash: doc.passwordHash,\r\n      firstName: doc.firstName,\r\n      lastName: doc.lastName,\r\n      createdAt: doc.createdAt,\r\n    });\r\n  }\r\n}\r\n","import { Schema, model } from 'mongoose';\r\n\r\nconst UserSchema = new Schema(\r\n  {\r\n    email: { type: String, required: true, unique: true },\r\n    passwordHash: { type: String, required: true },\r\n    firstName: { type: String, required: true },\r\n    lastName: { type: String, required: true },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nexport const UserModel = model('User', UserSchema);\r\n","import { Injectable } from '@nestjs/common';\r\nimport { FavoriteRepository } from '../domain/favorite.repository';\r\nimport { Favorite } from '../domain/favorite.entity';\r\nimport { FavoriteModel } from './favorite.schema';\r\n\r\n@Injectable()\r\nexport class FavoriteMongoRepository implements FavoriteRepository {\r\n  async findByUser(userEmail: string): Promise<Favorite[]> {\r\n    const docs = await FavoriteModel.find({ userEmail }).sort({ createdAt: -1 });\r\n    return docs.map((doc) =>\r\n      Favorite.create({\r\n        userEmail: doc.userEmail,\r\n        moduleCode: doc.moduleCode,\r\n        createdAt: doc.createdAt,\r\n      })\r\n    );\r\n  }\r\n\r\n  async findOne(userEmail: string, moduleCode: string): Promise<Favorite | null> {\r\n    const doc = await FavoriteModel.findOne({ userEmail, moduleCode });\r\n    if (!doc) return null;\r\n    return Favorite.create({\r\n      userEmail: doc.userEmail,\r\n      moduleCode: doc.moduleCode,\r\n      createdAt: doc.createdAt,\r\n    });\r\n  }\r\n\r\n  async create(favorite: Favorite): Promise<Favorite> {\r\n    const doc = new FavoriteModel({\r\n      userEmail: favorite.userEmail,\r\n      moduleCode: favorite.moduleCode,\r\n    });\r\n    await doc.save();\r\n    return Favorite.create({\r\n      userEmail: doc.userEmail,\r\n      moduleCode: doc.moduleCode,\r\n      createdAt: doc.createdAt,\r\n    });\r\n  }\r\n\r\n  async delete(userEmail: string, moduleCode: string): Promise<void> {\r\n    await FavoriteModel.deleteOne({ userEmail, moduleCode });\r\n  }\r\n}\r\n","import { Schema, model } from 'mongoose';\r\n\r\nconst FavoriteSchema = new Schema(\r\n  {\r\n    userEmail: { type: String, required: true },\r\n    moduleCode: { type: String, required: true },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Ensure a user can only favorite a module once\r\nFavoriteSchema.index({ userEmail: 1, moduleCode: 1 }, { unique: true });\r\n\r\nexport const FavoriteModel = model('Favorite', FavoriteSchema);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { ValidationPipe } from '@nestjs/common';\r\nimport * as mongoose from 'mongoose';\r\nimport * as dotenv from 'dotenv';\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\ndotenv.config();\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule, {\r\n    cors: {\r\n      origin: process.env.FRONTEND_ORIGIN?.split(',') ?? ['http://localhost:4200'],\r\n      credentials: true,\r\n    },\r\n  });\r\n\r\n  app.setGlobalPrefix('api');\r\n  app.useGlobalPipes(new ValidationPipe({ whitelist: true, forbidNonWhitelisted: true }));\r\n\r\n  const mongo = process.env.MONGO_URI;\r\n  if (!mongo) {\r\n    throw new Error('MONGO_URI not set');\r\n  }\r\n  await mongoose.connect(mongo);\r\n\r\n  const port = process.env.PORT || 3000;\r\n  await app.listen(port);\r\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/api`);\r\n}\r\n\r\nbootstrap();\r\n\r\n\r\n"],"names":[],"sourceRoot":""}